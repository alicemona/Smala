/*
 *  djnn v2
 *
 *  The copyright holders for the contents of this file are:
 *      Ecole Nationale de l'Aviation Civile, France (2018)
 *  See file "license.terms" for the rights and conditions
 *  defined by copyright holders.
 *
 *
 *  Contributors:
 *      Mathieu Magnaudet <mathieu.magnaudet@enac.fr>
 *
 */

Every node in a tree is a component.

A component has an activation state.
If a component has no parent it can be activated.
If a component has a parent and the parent is activated or activating then it can be activated.
If a component has a parent and the parent is deactivated or deactivating then it cannot be activated.
If a component is activated it can be deactivated.

Every component can be coupled to a list of subscribers.
Subscribers are notified each time a component is activated.

A property does not notify its subscribers if it is not activable that is, if it has a parent and its parent is not activated.
If a property is activable, it notifies its subscribers each time its value is set.

A component "Component" can be in one of the following activation states:
	- deactivated,
	- activating,
	- activated
	- deactivating.
The activation of a component "Component" entails the activation of all of its children that are not qualified as models. While activating its children a "Component" is in the state activating.
The deactivation of a Component entails the deactivation of its children. During this operation it is in the state deactivating.

A component "Spike" is deactivated or activating. When activated by an external signal, that is a coupling or an explicit activation, it notifies its activation to all of its subscribers. Once this is done, it returns to the state deactivated.

An assignment is activated when its parent is activated except explicitly stated as activable only on demand through a coupling

A connector triggers a copy from its source property to the destination property each times the source property is updated. A first copy is made on creation.